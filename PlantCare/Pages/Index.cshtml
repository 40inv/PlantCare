@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    .card {
        min-width: 15em;
        min-height: 20em;
        transition: transform 0.3s, border 0.3s;
    }

        .card:hover {
            border: 2px solid #007bff; /* Light blue border */
            transform: scale(1.05); /* Increase size by 5% */
        }
        /* Style the anchor text inside the card to remove underline and blue color */
        .card a {
            color: black;
            text-decoration: none;
        }
</style>

<div class="text-center">
    <h1>Plants</h1>
    <div class="container">
        <div class="row">
            @foreach (var plant in Model.Plants)
            {
                <div class="col-12 col-md-6 col-lg-4 col-xl-3 mb-4">
                    <div class="card" data-toggle="tooltip" data-trigger="focus" title="Show more details for @plant.CommonName">
                        <a href="@Url.Page("PlantDetails", new { id = plant.Id })">
                            <img src="@plant.ImageUrl" class="card-img-top img-fluid" alt="Plant Image" style="object-fit: cover; height: 200px;">
                            <div class="card-body">
                                <p class="card-text">@plant.CommonName</p>
                            </div>
                        </a>

                    </div>
                </div>
            }
            @if (@Model.Plants is null || !@Model.Plants.Any())
            {
                @*TODO: Possible improvement is add case for error from Trefle API to distinguish from no data*@
                <div>No data available.</div>
            }
        </div>
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination flex-wrap">
            <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
                <a asp-route-currentPage="1"
                   class="page-link" aria-label="Frist">
                    <span class="sr-only">First</span>
                </a>
            </li>
            <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
                <a asp-route-currentPage="@(Model.CurrentPage -1)"
                   class="page-link" aria-label="Previous">
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
                <a asp-route-currentpage="@(Model.CurrentPage + 1)"
                   class="page-link" aria-label="Next">
                    <span aria-hidden="true">Next</span>
                </a>
            </li>
        </ul>
    </nav>

    <div id="map" style="width: 100%; height: 400px;"></div>
</div>
